---
import { getCollection, getEntry, type CollectionEntry } from 'astro:content';

type BlogEntry = CollectionEntry<'blog'>;
type BlogPageEntry = CollectionEntry<'blogPage'>;

const posts: BlogEntry[] = await getCollection('blog');
const blogPageCollection: BlogPageEntry[] = await getCollection('blogPage');

if (blogPageCollection.length === 0) {
  throw new Error('Blog list not found in copy collection');
}

const blogPage = blogPageCollection[0];
const { headline } = blogPage.data;

const sortedPosts: BlogEntry[] = posts.sort(
  (a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) => {
    const [dayA, monthA, yearA] = a.data.date.split('-').map(Number);
    const [dayB, monthB, yearB] = b.data.date.split('-').map(Number);

    const dateA = new Date(yearA, monthA - 1, dayA);
    const dateB = new Date(yearB, monthB - 1, dayB);

    return dateB.getTime() - dateA.getTime();
  }
);
---

<h2>{headline}</h2>
<ul>
  {
    sortedPosts.map((post) => {
      const { slug, title } = post.data;

      return (
        <li>
          <a href={`/blog/${slug}`}>{title}</a>
        </li>
      );
    })
  }
</ul>
