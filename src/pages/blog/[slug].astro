---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection, render, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');

  return posts.map((post: { data: { slug: string } }) => ({
    params: { slug: post.data.slug },
    props: { post, allPosts: posts },
  }));
}

const { post, allPosts } = Astro.props as {
  post: CollectionEntry<'blog'>;
  allPosts: CollectionEntry<'blog'>[];
};
// use filesystem order directly
const currentIndex = allPosts.findIndex((p) => p.id === post.id);
const prevPost = allPosts[currentIndex - 1];
const nextPost = allPosts[currentIndex + 1];

const { Content } = await render(post);
const heading = post.data.title; // the <h1>
const pageTitle = `${heading} | Blog | Marco Mazzai`; // reuse heading

// parse date from DD-MM-YYYY
const [day, month, year] = post.data.date.split('-').map(Number);
const postDate = new Date(year, month - 1, day);

const formattedDate = new Intl.DateTimeFormat('en-GB', {
  day: '2-digit',
  month: 'short',
  year: 'numeric',
}).format(postDate);
---

<BaseLayout title={pageTitle}>
  <h1>{heading}</h1>
  <p class='post-date'>{formattedDate}</p>
  <article>
    <Content />
  </article>
  <nav>
    {prevPost && <a href={`/blog/${prevPost.data.slug}`}>← {prevPost.data.title}</a>}
    {nextPost && <a href={`/blog/${nextPost.data.slug}`}>{nextPost.data.title} →</a>}
  </nav>
</BaseLayout>
